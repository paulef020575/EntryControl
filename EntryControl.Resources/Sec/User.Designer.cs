//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace EntryControl.Resources.Sec {
    using System;
    
    
    /// <summary>
    ///   Класс ресурса со строгой типизацией для поиска локализованных строк и т.д.
    /// </summary>
    // Этот класс создан автоматически классом StronglyTypedResourceBuilder
    // с помощью такого средства, как ResGen или Visual Studio.
    // Чтобы добавить или удалить член, измените файл .ResX и снова запустите ResGen
    // с параметром /str или перестройте свой проект VS.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class User {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal User() {
        }
        
        /// <summary>
        ///   Возвращает кэшированный экземпляр ResourceManager, использованный этим классом.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("EntryControl.Resources.Sec.User", typeof(User).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Перезаписывает свойство CurrentUICulture текущего потока для всех
        ///   обращений к ресурсу с помощью этого класса ресурса со строгой типизацией.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на delete from secUserCargo where userId = @userId and cargoId = @cargoId.
        /// </summary>
        public static string CargoDelete {
            get {
                return ResourceManager.GetString("CargoDelete", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на select id, name, count(userId) as cnt from refCargos left join secUserCargo on (cargoId = id and userId = @userId) group by id, name order by name.
        /// </summary>
        public static string CargoLoadList {
            get {
                return ResourceManager.GetString("CargoLoadList", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на update or insert into secUserCargo (userId, cargoId) values (@userId, @cargoId) matching (userId, cargoId).
        /// </summary>
        public static string CargoSave {
            get {
                return ResourceManager.GetString("CargoSave", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на select id from secUsers where id = @id and accessPassword = @password.
        /// </summary>
        public static string CheckPassword {
            get {
                return ResourceManager.GetString("CheckPassword", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на select userId from secUserRole where userId = @id and userRole = @role.
        /// </summary>
        public static string CheckRole {
            get {
                return ResourceManager.GetString("CheckRole", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на delete from secDomainUser where userId = @id.
        /// </summary>
        public static string ClearDomainUser {
            get {
                return ResourceManager.GetString("ClearDomainUser", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на delete from secUsers where id = @id.
        /// </summary>
        public static string Delete {
            get {
                return ResourceManager.GetString("Delete", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на gen_secUsers_id.
        /// </summary>
        public static string GeneratorName {
            get {
                return ResourceManager.GetString("GeneratorName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на select * from secDomainUser where userId = @id.
        /// </summary>
        public static string GetDomainUser {
            get {
                return ResourceManager.GetString("GetDomainUser", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на select * from secUsers where id = (select userId from secDomainUser where domainName like @domainName and userName like @userName) and isLocked = 0.
        /// </summary>
        public static string GetUserId {
            get {
                return ResourceManager.GetString("GetUserId", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на insert into secUsers (id, lastname, firstname, secondname, isLocked, outBlackList) values (@id, @lastname, @firstname, @secondname, @isLocked, @outBlackList).
        /// </summary>
        public static string Insert {
            get {
                return ResourceManager.GetString("Insert", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на select * from secUsers where id = @id.
        /// </summary>
        public static string Load {
            get {
                return ResourceManager.GetString("Load", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на select * from secUsers order by lastname, firstname, secondname.
        /// </summary>
        public static string LoadList {
            get {
                return ResourceManager.GetString("LoadList", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на delete from secUserRole where userId = @userId and userRole = @userRole.
        /// </summary>
        public static string RoleDelete {
            get {
                return ResourceManager.GetString("RoleDelete", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на select id, count(userId) AS cnt from systemEnumerations left join secUserRole on (userRole = id and userId = @userId) where enumerationName = &apos;userRole&apos; group by id.
        /// </summary>
        public static string RoleLoadList {
            get {
                return ResourceManager.GetString("RoleLoadList", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на update or insert into secUserRole (userId, userRole) values (@userId, @userRole) matching (userId, userRole).
        /// </summary>
        public static string RoleSave {
            get {
                return ResourceManager.GetString("RoleSave", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на update or insert into secDomainUser (userId, domainName, userName) values (@id, @domainName, @userName) matching (userId).
        /// </summary>
        public static string SetDomainUser {
            get {
                return ResourceManager.GetString("SetDomainUser", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на update secUsers set accesspassword = @password where id = @id.
        /// </summary>
        public static string SetPassword {
            get {
                return ResourceManager.GetString("SetPassword", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на update secUsers set lastname = @lastname, firstname = @firstname, secondname = @secondname, isLocked = @isLocked, outBlackList = @outBlackList where id = @id.
        /// </summary>
        public static string Update {
            get {
                return ResourceManager.GetString("Update", resourceCulture);
            }
        }
    }
}
