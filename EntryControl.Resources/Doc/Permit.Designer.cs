//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace EntryControl.Resources.Doc {
    using System;
    
    
    /// <summary>
    ///   Класс ресурса со строгой типизацией для поиска локализованных строк и т.д.
    /// </summary>
    // Этот класс создан автоматически классом StronglyTypedResourceBuilder
    // с помощью такого средства, как ResGen или Visual Studio.
    // Чтобы добавить или удалить член, измените файл .ResX и снова запустите ResGen
    // с параметром /str или перестройте свой проект VS.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class Permit {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Permit() {
        }
        
        /// <summary>
        ///   Возвращает кэшированный экземпляр ResourceManager, использованный этим классом.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("EntryControl.Resources.Doc.Permit", typeof(Permit).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Перезаписывает свойство CurrentUICulture текущего потока для всех
        ///   обращений к ресурсу с помощью этого класса ресурса со строгой типизацией.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на select * from GETAPPOINTCREATOR(@permitId).
        /// </summary>
        public static string AppointCreator {
            get {
                return ResourceManager.GetString("AppointCreator", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на select 1 from docPermit where id = @id and permitState in (4).
        /// </summary>
        public static string CheckClosed {
            get {
                return ResourceManager.GetString("CheckClosed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Закрытие.
        /// </summary>
        public static string CloseMoving {
            get {
                return ResourceManager.GetString("CloseMoving", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на delete from docPermit where id = @id.
        /// </summary>
        public static string Delete {
            get {
                return ResourceManager.GetString("Delete", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Въезд.
        /// </summary>
        public static string EntryMoving {
            get {
                return ResourceManager.GetString("EntryMoving", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Выезд.
        /// </summary>
        public static string ExitMoving {
            get {
                return ResourceManager.GetString("ExitMoving", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на gen_docPermit_id.
        /// </summary>
        public static string GeneratorName {
            get {
                return ResourceManager.GetString("GeneratorName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на select comment from docPermit where id = @id.
        /// </summary>
        public static string GetComment {
            get {
                return ResourceManager.GetString("GetComment", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на select permitCount from docPermitGetCount(@dateStart, @dateFinish, @entryPoint, @defaultState).
        /// </summary>
        public static string GetCount {
            get {
                return ResourceManager.GetString("GetCount", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на select * from getEnteredPermit order by lastTime.
        /// </summary>
        public static string GetEnteredVehicles {
            get {
                return ResourceManager.GetString("GetEnteredVehicles", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на select first 1 mov.id, mov.moving, enum.enumerationValue as movingName, mov.entryPoint, pnt.name as entryPointName, mov.userId, usr.lastname as userName, mov.movingTime from docPermitMoving mov, systemEnumerations enum, refEntryPoint as pnt, secUsers usr where mov.permit = @permit and enum.enumerationName = &apos;permitMoving&apos; and mov.moving = enum.id and pnt.id = mov.entryPoint      and usr.id = mov.userId order by mov.movingTime desc.
        /// </summary>
        public static string GetLastMoving {
            get {
                return ResourceManager.GetString("GetLastMoving", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на select max(date1) from (select max(dateModified) as date1 from docPermit union select max(dateDeleted) as date1 from docDeleted where documentType=&apos;permit&apos;).
        /// </summary>
        public static string GetLasUpdateDate {
            get {
                return ResourceManager.GetString("GetLasUpdateDate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на select permitNumber from getPermitNumber(@period).
        /// </summary>
        public static string GetPermitNumber {
            get {
                return ResourceManager.GetString("GetPermitNumber", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на select * from repMovingHistory(@dateFrom, @dateTo, @vehicleMask) order by movingTime desc.
        /// </summary>
        public static string HistoryMoving {
            get {
                return ResourceManager.GetString("HistoryMoving", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на insert into docPermit (id, creator, createDate, period, docNumber, permitState, dateFrom, dateTo, vehicle, driverName, contact, entryPoint, multiEntry, cargo, comment) values (@id, @creator, @createDate, @period, @docNumber, @permitState, @dateFrom, @dateTo, @vehicle, @driverName, @contact, @entryPoint, @multiEntry, @cargo, @comment).
        /// </summary>
        public static string Insert {
            get {
                return ResourceManager.GetString("Insert", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на select * from docPermitLoad(@permitId).
        /// </summary>
        public static string Load {
            get {
                return ResourceManager.GetString("Load", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на select * from docPermitLoadByNum(@period, @docNumber).
        /// </summary>
        public static string LoadByNum {
            get {
                return ResourceManager.GetString("LoadByNum", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на select * from docPermitLoadByVehicle(@licensePlate).
        /// </summary>
        public static string LoadByVehicle {
            get {
                return ResourceManager.GetString("LoadByVehicle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на select * from docPermitLoadList(@dateStart, @dateFinish, @entryPoint, @defaultState, @page).
        /// </summary>
        public static string LoadList {
            get {
                return ResourceManager.GetString("LoadList", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на select * from docPermitLoadPrevious(@cargo, @mark, @licensePlate).
        /// </summary>
        public static string LoadPrevious {
            get {
                return ResourceManager.GetString("LoadPrevious", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на delete from docPermitMoving where id = @id.
        /// </summary>
        public static string MovingDelete {
            get {
                return ResourceManager.GetString("MovingDelete", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на gen_docPermitMoving_id.
        /// </summary>
        public static string MovingGenerator {
            get {
                return ResourceManager.GetString("MovingGenerator", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на insert into docPermitMoving (id, permit, moving, entryPoint, userId, movingTime) values (@id, @permit, @moving, @entryPoint, @userId, @movingTime).
        /// </summary>
        public static string MovingInsert {
            get {
                return ResourceManager.GetString("MovingInsert", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на select mov.id, mov.id, mov.moving, enum.enumerationValue as movingName, mov.entryPoint, pnt.name as entryPointName, mov.movingTime from docPermitMoving mov, systemEnumerations enum, refEntryPoint as pnt where mov.permit = @permit and enum.enumerationName = &apos;permitMoving&apos; and mov.moving = enum.id and pnt.id = mov.entryPoint order by mov.movingTime.
        /// </summary>
        public static string MovingLoadList {
            get {
                return ResourceManager.GetString("MovingLoadList", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на update docPermitMoving set moving = @moving, entryPoint = @entryPoint, userId = @userId, movingTime = @movingTime where id = @id.
        /// </summary>
        public static string MovingUpdate {
            get {
                return ResourceManager.GetString("MovingUpdate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Без заявки (Бюро пропусков).
        /// </summary>
        public static string NoPlanAppoint {
            get {
                return ResourceManager.GetString("NoPlanAppoint", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Пропуск был закрыт @movingTime..
        /// </summary>
        public static string PermitClose {
            get {
                return ResourceManager.GetString("PermitClose", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на По указанному пропуску а/машина въехала на территорию @dateMoving. Выезд с территории в системе не зафиксирован.
        ///Игнорировать ошибку данных?.
        /// </summary>
        public static string PermitIn {
            get {
                return ResourceManager.GetString("PermitIn", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на По указанному пропуску а/машина выехала с территории @dateMoving. Новый въезд на территорию в системе не зафиксирован.
        ///Игнорировать ошибку данных?.
        /// </summary>
        public static string PermitOut {
            get {
                return ResourceManager.GetString("PermitOut", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на По пропуску возможен дальнейший въезд. Закрыть пропуск?.
        /// </summary>
        public static string PermitToClose {
            get {
                return ResourceManager.GetString("PermitToClose", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на update docPermit set permitState = @permitState, dateFrom = @dateFrom, dateTo = @dateTo, vehicle = @vehicle, driverName = @driverName, contact = @contact, entryPoint = @entryPoint, multiEntry = @multiEntry, cargo = @cargo, comment = @comment where id= @id.
        /// </summary>
        public static string Update {
            get {
                return ResourceManager.GetString("Update", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на По выбранному пропуску проезд возможен только через пункт @EntryPoint.
        /// </summary>
        public static string WrongEntryPoint {
            get {
                return ResourceManager.GetString("WrongEntryPoint", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Выбранный пропуск действовал с @dateFrom по @dateTo. Пропуск закрыт..
        /// </summary>
        public static string WrongPeriod {
            get {
                return ResourceManager.GetString("WrongPeriod", resourceCulture);
            }
        }
    }
}
